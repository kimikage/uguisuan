apply plugin: 'com.android.model.application'

model {
    android.signingConfigs {
        create("debugkey") {
            storeFile "debug.keystore"
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    android {
        compileSdkVersion 23
        buildToolsVersion "23.0.3"

        defaultConfig {
            applicationId "com.github.kimikage.uguisuan"
            minSdkVersion.apiLevel 16
            targetSdkVersion.apiLevel 23
            versionCode 1
            versionName "1.0"
        }
        buildTypes {
            debug {
                minifyEnabled false
                ndk {
                    debuggable true
                }
            }
            release {
                minifyEnabled false
                proguardFiles.add(file('proguard-rules.pro'))
                signingConfig = $("android.signingConfigs.debugkey")
                ndk {
                    debuggable true
                }
            }
        }

        ndk {
            moduleName "wave"
            toolchain "clang"
            // toolchainVersion ""
            cppFlags.addAll(["-Weverything", "-Wno-c++98-compat", "-Wno-c++98-compat-pedantic",
                             "-Wno-system-headers",
                             "-std=c++11", "-fno-exceptions", "-fno-rtti"])
            ldLibs.addAll(['atomic', 'android', 'log', 'OpenSLES'])
            stl "c++_static"
        }

        productFlavors {
            create("arm") {
                ndk.abiFilters.add("armeabi")
            }
            create("arm7") {
                ndk.abiFilters.add("armeabi-v7a")
            }
            create("arm8") {
                ndk.abiFilters.add("arm64-v8a")
            }
            create("x86") {
                ndk.abiFilters.add("x86")
            }
            create("x86_64") {
                ndk.abiFilters.add("x86_64")
            }
            // To include all cpu architectures, leaves abiFilters empty
            create("all")
        }

        sources.main {
            jni {
                source {
                }
            }
            jniLibs {
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.+'
    compile 'com.android.support:support-v4:23.+'
}
